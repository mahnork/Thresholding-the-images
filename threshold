import cv2 as cv
import numpy as np
import os
from matplotlib import pyplot as plt

# Directory containing images
image_directory = 'trainDataPos/trainDataPos'
# Target directory for saving processed images
output_directory = 'trainDataPosTh'
os.makedirs(output_directory, exist_ok=True)  # Create the output directory if it doesn't exist

images = os.listdir(image_directory)  # List of filenames in the directory

for img_name in images:
    if img_name.endswith('.jpg'):  # Check if the file is a JPEG image
        img_path = os.path.join(image_directory, img_name)
        img = cv.imread(img_path, cv.IMREAD_GRAYSCALE)
        assert img is not None, f"File {img_path} could not be read, check if the path exists"

        img = cv.medianBlur(img, 5)

        # Adaptive Mean Thresholding
        th2 = cv.adaptiveThreshold(img, 255, cv.ADAPTIVE_THRESH_MEAN_C, cv.THRESH_BINARY, 11, 2)

        # Titles and images for plotting
 
        images = [img, th2]

        # Create subplots and show images
        plt.figure(figsize=(10, 5))  # Set the figure size
        for i in range(2):
            ax = plt.subplot(1, 2, i + 1)  # Arrange plots in 1 row and 2 columns
            plt.imshow(images[i], cmap='gray', aspect='auto')  # Use the 'gray' colormap
 
            plt.xticks([]), plt.yticks([])
            ax.set_adjustable('box')

        # Save the figure to a file with a unique name in the specified output directory
        output_filename = os.path.join(output_directory, f'processed_{img_name}')
        plt.savefig(output_filename, bbox_inches='tight', pad_inches=0.1, dpi=300)
        plt.close()  # Close the plot to free up memory
